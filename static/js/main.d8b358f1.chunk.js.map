{"version":3,"sources":["index.js"],"names":["Square","props","react__WEBPACK_IMPORTED_MODULE_6___default","a","createElement","className","onClick","label","calculateWinner","squares","lines","i","length","_lines$i","Object","D_UserData_Source_Fun_react_my_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_5__","b","c","Board","_this","this","renderSquare","React","Component","Game","_this2","D_UserData_Source_Fun_react_my_app_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__","D_UserData_Source_Fun_react_my_app_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__","D_UserData_Source_Fun_react_my_app_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__","call","state","history","Array","fill","stepNumber","xIsNext","firstIsX","startCond","slice","setState","concat","step","status","_this3","current","winner","moves","map","move","desc","key","jumpTo","handleClick","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.d8b358f1.chunk.js","sourcesContent":["import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\n\r\nfunction Square(props) {\r\n    return (\r\n        <button\r\n            className=\"square\"\r\n            onClick={props.onClick}>\r\n\r\n            {props.label}\r\n\r\n        </button>\r\n    );\r\n}\r\n\r\nfunction calculateWinner(squares) {\r\n    const lines = [\r\n        [0, 1, 2],\r\n        [3, 4, 5],\r\n        [6, 7, 8],\r\n        [0, 3, 6],\r\n        [1, 4, 7],\r\n        [2, 5, 8],\r\n        [0, 4, 8],\r\n        [2, 4, 6],\r\n    ];\r\n    for (let i = 0; i < lines.length; i++) {\r\n        const [a, b, c] = lines[i];\r\n        if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\r\n            return squares[a];\r\n        }\r\n    }\r\n    return null;\r\n}\r\n\r\nclass Board extends React.Component {\r\n    renderSquare(i) {\r\n        return (\r\n            <Square\r\n                label={this.props.squares[i]}\r\n                onClick={() => this.props.onClick(i)}\r\n            />\r\n        );\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div className=\"board-row\">\r\n                    {this.renderSquare(0)}\r\n                    {this.renderSquare(1)}\r\n                    {this.renderSquare(2)}\r\n                </div>\r\n                <div className=\"board-row\">\r\n                    {this.renderSquare(3)}\r\n                    {this.renderSquare(4)}\r\n                    {this.renderSquare(5)}\r\n                </div>\r\n                <div className=\"board-row\">\r\n                    {this.renderSquare(6)}\r\n                    {this.renderSquare(7)}\r\n                    {this.renderSquare(8)}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nclass Game extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            history: [{\r\n                squares: Array(9).fill(null),\r\n            }],\r\n            stepNumber: 0,\r\n            xIsNext: props.firstIsX,\r\n            startCond: props.firstIsX,\r\n        };\r\n    }\r\n\r\n    handleClick(i) {\r\n        const history = this.state.history.slice(0, this.state.stepNumber + 1);\r\n        const current = history[history.length - 1];\r\n        const squares = current.squares.slice();\r\n        if (calculateWinner(squares) || squares[i]) {\r\n            return;\r\n        }\r\n        squares[i] = this.state.xIsNext ? 'X' : 'O';\r\n        this.setState({\r\n            history: history.concat([{\r\n                squares: squares,\r\n            }]),\r\n            stepNumber: history.length,\r\n            xIsNext: !this.state.xIsNext,\r\n        });\r\n    }\r\n\r\n    jumpTo(step) {\r\n        this.setState({\r\n          stepNumber: step,\r\n          xIsNext: step === 0 ? this.state.startCond : (step % 2) === 0,\r\n        });\r\n      }\r\n\r\n    render() {\r\n        const history = this.state.history;\r\n        const current = history[this.state.stepNumber];\r\n        const winner = calculateWinner(current.squares);\r\n\r\n        const moves = history.map((step, move) => {\r\n            const desc = move ?\r\n                'Go to move #' + move :\r\n                'Go to game start';\r\n            return (\r\n                <li key={move}>\r\n                    <button onClick={() => this.jumpTo(move)}>{desc}</button>\r\n                </li>\r\n            );\r\n        });\r\n    \r\n        let status;\r\n        if (winner) {\r\n          status = 'Winner: ' + winner;\r\n        } else {\r\n          status = 'Next player: ' + (this.state.xIsNext ? 'X' : 'O');\r\n        }\r\n\r\n        return (\r\n            <div className=\"game\">\r\n                <div className=\"game-board\">\r\n                    <Board\r\n                        squares={current.squares}\r\n                        onClick={(i) => this.handleClick(i)}\r\n                    />\r\n                </div>\r\n                <div className=\"game-info\">\r\n                    <div>{status}</div>\r\n                    <ol>{moves}</ol>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n// ========================================\r\n\r\nReactDOM.render(\r\n    <Game \r\n        firstIsX={false}/>,\r\n    document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}